{"version":3,"sources":["Components/BtnComponent.js","Components/InOutComponent.js","Components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Btn","numEle","this","props","numArr","map","ele","className","value","onClick","e","handleNumClick","target","operatorEle","operatorArr","handleOperClick","handleClear","handlePop","handleEqual","Component","InOut","autoFocus","type","name","calInput","onChange","handleInChange","onKeyDown","handleKeyPress","placeholder","calOutput","readOnly","Main","initialState","state","bind","a","includes","length","setState","filter","slice","concat","staIn","outval","expEval","toString","key","preventDefault","exp","arr","split","tempInd","numOpArr","onlyNum","entries","index","x","indexOf","push","join","lastEle","j","opIndex","oparend1","Number","oparend2","opeValue","splice","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bddeb8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Btn extends Component {\r\n    render() {\r\n\r\n        const numEle = this.props.numArr.map((ele) => {\r\n            return (\r\n                <button key={ele} className='ind-num-btns' value={ele} onClick={(e) => this.props.handleNumClick(e.target.value)}>{ele}</button>)\r\n        });\r\n\r\n\r\n        const operatorEle = this.props.operatorArr.map((ele) => {\r\n            return (\r\n                <button key={ele} className='ind-op-btns' value={ele} onClick={(e) => this.props.handleOperClick(e.target.value)}>{ele}</button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className='btns'>\r\n                <div className='num-other-container'>\r\n                    <div className='other-btn-container'>\r\n                        <button className='ind-oth-btn' onClick={this.props.handleClear}>AC</button>\r\n                        <button className='ind-oth-btn' onClick={this.props.handlePop}> &larr; </button>\r\n                        <button className='ind-oth-btn' onClick={this.props.handleEqual}> = </button>\r\n                    </div>\r\n                    <div className='numbers-container'>\r\n                        {numEle}\r\n                    </div>\r\n                </div>\r\n                <div className='operations-container'>\r\n                    {operatorEle}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Btn;","import React, { Component } from 'react';\r\n\r\nclass InOut extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className='in-out-container'>\r\n                <input autoFocus type='text' name='calInput' className='calInput' value={this.props.calInput}\r\n                    onChange={(e) => this.props.handleInChange(e.target.value)}\r\n                    onKeyDown={(e) => this.props.handleKeyPress(e)}\r\n                    placeholder='Input'\r\n                />\r\n                <input type='text' name='calOutput' className='calOutput'\r\n                    placeholder = 'Output'\r\n                    value={this.props.calOutput} readOnly />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InOut;","import React, { Component } from 'react';\r\nimport Btn from './BtnComponent';\r\nimport InOut from './InOutComponent';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.initialState = {\r\n            calInput: '',\r\n            calOutput: '',\r\n        }\r\n\r\n        this.numArr = ['9', '8', '7', '6', '5', '4', '3', '2', '1', '0', '.'];\r\n        this.operatorArr = ['*', '/', '%', '+', '-',];\r\n\r\n        this.state = this.initialState;\r\n        this.handleNumClick = this.handleNumClick.bind(this);\r\n        this.handleClear = this.handleClear.bind(this);\r\n        this.handlePop = this.handlePop.bind(this);\r\n        this.handleOperClick = this.handleOperClick.bind(this);\r\n        this.handleInChange = this.handleInChange.bind(this);\r\n        this.handleEqual = this.handleEqual.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    }\r\n\r\n    async handleInChange(e) {\r\n        if (!this.numArr.includes(e[e.length - 1]) && !this.operatorArr.includes(e[e.length - 1])) {\r\n            this.setState({ calInput: '' , calOutput: ''})\r\n            return;\r\n        }\r\n\r\n        if (e.length === 1) {\r\n            const opeCheck = this.operatorArr.filter((ele) => ele !== '-')\r\n            if (opeCheck.includes(e[0]))\r\n                return;\r\n        }\r\n\r\n        if (this.operatorArr.includes(e[e.length - 1])) {\r\n            if (this.operatorArr.includes(e[e.length - 2])) {\r\n                e = e.slice(0, -2).concat(e[e.length - 1]);\r\n            }\r\n        }\r\n\r\n        await this.setState({ calInput: e });\r\n\r\n        const staIn = this.state.calInput;\r\n\r\n        if (staIn.length === 2) {\r\n            if (staIn[0] === '0') {\r\n                if (this.numArr.includes(staIn[1]))\r\n                    this.setState({ calInput: staIn[1] })\r\n            }\r\n        }\r\n\r\n        let outval = ''\r\n\r\n        if (this.operatorArr.includes(staIn[staIn.length - 1])) {\r\n            outval = this.expEval(staIn.slice(0, staIn.length - 1))\r\n        }\r\n        else {\r\n            outval = this.expEval(staIn);\r\n        }\r\n        await this.setState({ calOutput: outval });\r\n    }\r\n\r\n    handleNumClick(e) {\r\n        this.handleInChange(this.state.calInput.concat(e));\r\n    }\r\n\r\n    handleOperClick(e) {\r\n        this.handleInChange(this.state.calInput.concat(e))\r\n    }\r\n\r\n    handleClear() {\r\n        this.setState(this.initialState);\r\n    }\r\n\r\n    handlePop() {\r\n        this.setState({ calInput: this.state.calInput.slice(0, -1) });\r\n        //this.handleInChange(this.state.calInput.slice(0, -1) )\r\n    }\r\n\r\n\r\n    handleEqual() {\r\n        this.setState({ calInput: this.state.calOutput.toString(), calOutput: '' });\r\n    }\r\n\r\n    handleKeyPress(e) {\r\n        if (e.key === 'ArrowRight' || e.key === 'ArrowLeft' || e.key === 'ArrowUp' || e.key === 'ArrowDown') {\r\n            e.preventDefault();\r\n        }\r\n\r\n        if(e.key === '=' || e.key === 'Enter'){\r\n            this.handleEqual();\r\n        }\r\n    }\r\n    expEval(exp) {\r\n\r\n        let arr = exp.split('');\r\n        let tempInd = 0;\r\n        let numOpArr = [];\r\n        let onlyNum = true;\r\n        for (const [index, value] of arr.entries()) {\r\n            let x = this.operatorArr.indexOf(value);\r\n            if (x !== -1) {\r\n                numOpArr.push(arr.slice(tempInd, index).join(''));\r\n                numOpArr.push(this.operatorArr[x]);\r\n                tempInd = index + 1;\r\n                onlyNum = false;\r\n            }\r\n        }\r\n\r\n        if (onlyNum) {\r\n            return '';\r\n        }\r\n\r\n        let lastEle = arr.slice(tempInd, arr.length);\r\n        numOpArr.push(lastEle.join(''));\r\n\r\n        for (const j of this.operatorArr) {\r\n            while (numOpArr.indexOf(j) !== -1) {\r\n                const opIndex = numOpArr.indexOf(j);\r\n                const oparend1 = Number(numOpArr[opIndex - 1]);\r\n                const oparend2 = Number(numOpArr[opIndex + 1]);\r\n                let opeValue = ''\r\n                switch (j) {\r\n                    case '*':\r\n                        opeValue = oparend1 * oparend2;\r\n                        break;\r\n                    case '/':\r\n                        if (oparend1 === 0 && oparend2 === 0) {\r\n                            opeValue = 'Not valid';\r\n                        }\r\n                        else {\r\n                            opeValue = oparend1 / oparend2;\r\n                        }\r\n                        break;\r\n                    case '%':\r\n                        opeValue = oparend1 % oparend2;\r\n                        break;\r\n                    case '+':\r\n                        opeValue = oparend1 + oparend2;\r\n                        break;\r\n                    case '-':\r\n                        opeValue = oparend1 - oparend2;\r\n                        break;\r\n                    default:\r\n                        opeValue = ''\r\n                }\r\n\r\n                numOpArr.splice(opIndex - 1, 3, opeValue);\r\n            }\r\n        }\r\n\r\n        return numOpArr[0];\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='main'>\r\n                <h1 className='pageHeading' >Calculator</h1>\r\n                <InOut\r\n                    calInput={this.state.calInput}\r\n                    calOutput={this.state.calOutput}\r\n                    handleInChange={this.handleInChange}\r\n                    handleKeyPress={this.handleKeyPress}\r\n                />\r\n\r\n                <Btn handleNumClick={this.handleNumClick}\r\n                    handleOperClick={this.handleOperClick}\r\n                    handleClear={this.handleClear}\r\n                    handlePop={this.handlePop}\r\n                    numArr={this.numArr}\r\n                    operatorArr={this.operatorArr}\r\n                    handleEqual={this.handleEqual}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import './App.css';\nimport Main from './Components/MainComponent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}